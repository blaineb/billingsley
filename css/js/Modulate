# Kind of similar as above but with a better syntax and a limiting option
Utils.modulate = (value, rangeA, rangeB, limit=false) ->

  [fromLow, fromHigh] = rangeA
  [toLow, toHigh] = rangeB

  # if rangeB consists of Colors we return a color tween
  # if Color.isColor(toLow) or _.isString(toLow) and Color.isColorString(toLow)
  #   ratio = Utils.modulate(value, rangeA, [0, 1])
  #   result = Color.mix(toLow, toHigh, ratio)
  #   return result

  result = toLow + (((value - fromLow) / (fromHigh - fromLow)) * (toHigh - toLow))

  if limit is true
    if toLow < toHigh
      return toLow if result < toLow
      return toHigh if result > toHigh
    else
      return toLow if result > toLow
      return toHigh if result < toHigh

  result
